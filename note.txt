1. viewport



2.flexbox弹性布局
根据元素个数不同自动填充容器


display:-webkit-flex; -- 弹性盒模型属性设置
flex:1; -- 设置当前元素在盒子中所占的比例
备注：弹性盒子模型不影响对元素进行margin的设置


flex-direction:row; -- 弹性盒模型的方向，默认为水平
flex-direction:row-reverse; -- 水平反向

flex-direction:column; -- 垂直
flex-direction:column-reverse; -- 垂直反向

-webkit-flex-wrap:nowrap; -- 按比例充满父元素
-webkit-flex-wrap:wrap; -- 按子元素原大小显示
-webkit-flex-wrap:wrap-reverse; -- 反向展示子元素


flex-flow:flex-direction flex-wrap; -- 两种属性合并简写的一种方式


justify-content:space-between; -- 多余空间放在中间显示
justify-content:space-around; -- 多余空间环绕两边显示

align-self:flex-start;
align-self:flex-center;
align-self:flex-end;
align-self:auto;
align-self:baseline;
align-self:stretch;
align-item:flex-start;
align-item:flex-center;
align-item:flex-end;
align-item:auto;
align-item:baseline;
align-item:stretch;


order -- 排序属性


3.终端交互优化

tap基础事件
备注:解决300ms问题，但是存在点透的bug。
上tap下click时，两个事件都会被触发
解决办法：
（1）上下都是tap（规范，但是无法解决原生标签的一些click事件，比如a标签）
（2）上层缓慢消失
（3）增加中间层


4.弹性滚动



备注：
body层滚动
（1）自带弹性滚动
（2）overflow:hidden;会失效
（3）GIF和定时器会被暂停
局部滚动
（1）没有弹性滚动


body为局部添加弹性滚动
body{
	overflow:scroll;
	-webkit-overflow-scrolling:touch;
}
 注意：Android不支持原生的弹性滚动。



 5.下拉刷新、上拉加载

 下拉刷新 -- touch事件
 上拉加载 -- scroll事件
 android 有bug




